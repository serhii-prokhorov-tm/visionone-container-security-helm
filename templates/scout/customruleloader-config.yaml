{{- if and .Values.visionOne.runtimeSecurity.enabled .Values.visionOne.runtimeSecurity.customRules.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "container.security.name" . }}-runtime-ruleloader
  labels:
    {{- include "runtimeRuleloader.labels" . | nindent 4 }}
data:
  falcoctl.yaml: |
    registry:
      creds:
         config: /root/.docker/config.json
    artifact:
      follow:
        rulesfilesdir: /rules/install
        tmpdir: /rules/tmp
        falcoversions: file:///versions.json
{{- with .Values.visionOne.runtimeSecurity.customRules -}}
      {{- if .ociRepository.enabled }}
        every: {{ .ociRepository.every }}
        refs:
        {{- with .ociRepository.artifactUrls }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
        {{- if .output.splunk.url }}
        splunk:
          url: {{ .output.splunk.url }}
          {{- if .output.splunk.headers }}
          headers:
          {{- $hasHecTokenSecretName := (and .output.splunk.hecTokenSecretName (ne .output.splunk.hecTokenSecretName "")) -}}
          {{- range .output.splunk.headers }}
          {{- if contains "Authorization:" . }}
          {{- if $hasHecTokenSecretName }}
          {{- fail "customRules.output.splunk.hecTokenSecretName automatically adds Splunk HEC auth header, no other Authorization headers allowed" -}}
          {{- end }}
          {{- end }}
          - "{{ . }}"
          {{- end }} {{/* range .output.splunk.headers */}}
          {{- end }} {{/* if .output.splunk.headers */}}
        {{- end }} {{/* if .output.splunk.url */}}
{{- end }}
{{- end }}