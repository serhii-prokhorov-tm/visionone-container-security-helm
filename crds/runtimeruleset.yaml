apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: runtimerulesets.visionone.trendmicro.com
spec:
  group: visionone.trendmicro.com
  names:
    kind: RuntimeRuleset
    listKind: RuntimeRulesetList
    plural: runtimerulesets
    singular: runtimeruleset
  scope: Cluster
  preserveUnknownFields: false # Structural schema validation https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#specifying-a-structural-schema
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RuntimeRuleset is the Schema for the runtimerulesets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            properties:
              name:
                type: string
                pattern: "^trendmicro-ruleset-.*$"
            type: object
          spec:
            description: RuntimeRulesetSpec defines the desired state of RuntimeRuleset
            properties:
              labels:
                description: Apply the ruleset to pods with the specified labels
                type: object
                additionalProperties:
                  type: string
              rules:
                description: Runtime rules by mitigation type
                properties:
                  isolate:
                    description: List of unique IDs of trendmicro runtime rules with
                      mitigation isolate
                    items:
                      description: The unique ID of trendmicro runtime rule
                      pattern: ^TM-[0-9]{8}$
                      type: string
                    maxItems: 200
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: set
                  log:
                    description: List of unique IDs of trendmicro runtime rules with
                      mitigation log
                    items:
                      description: The unique ID of trendmicro runtime rule
                      pattern: ^TM-[0-9]{8}$
                      type: string
                    maxItems: 200
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: set
                  terminate:
                    description: List of unique IDs of trendmicro runtime rules with
                      mitigation terminate
                    items:
                      description: The unique ID of trendmicro runtime rule
                      pattern: ^TM-[0-9]{8}$
                      type: string
                    maxItems: 200
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: set
                type: object
                x-kubernetes-validations:
                - message: "At least one mitigation type must be defined"
                  rule: "has(self.log) || has(self.isolate) || has(self.terminate)"
                - message: "All rules must be unique and not defined across multiple mitigation types"
                  rule: "has(self.log) && has(self.isolate) ? self.log.all(e, !(e in self.isolate)) : true"
                - message: "All rules must be unique and not defined across multiple mitigation types"
                  rule: "has(self.log) && has(self.terminate) ? self.log.all(e, !(e in self.terminate)) : true"
                - message: "All rules must be unique and not defined across multiple mitigation types"
                  rule: "has(self.isolate) && has(self.terminate) ? self.isolate.all(e, !(e in self.terminate)) : true"
            type: object
          status:
            description: RuntimeRulesetStatus defines the observed state of RuntimeRuleset
            properties:
              conditions:
                description: Represents the observations of RuntimeRuleset current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}